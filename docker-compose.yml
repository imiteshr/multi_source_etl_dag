version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  airflow-webserver:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      _PIP_ADDITIONAL_REQUIREMENTS: 'pandas>=1.5.0,<2.0.0 numpy>=1.21.0,<1.25.0 scikit-learn>=1.0.0,<1.3.0 requests>=2.25.0 psycopg2-binary>=2.8.6 flask>=2.0.0,<3.0.0 joblib>=1.0.0'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    ports:
      - "8081:8080"
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username airflow --firstname Airflow --lastname Admin --role Admin --email admin@example.com --password airflow &&
      airflow webserver"
    restart: always

  airflow-scheduler:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      _PIP_ADDITIONAL_REQUIREMENTS: 'pandas>=1.5.0,<2.0.0 numpy>=1.21.0,<1.25.0 scikit-learn>=1.0.0,<1.3.0 requests>=2.25.0 psycopg2-binary>=2.8.6 flask>=2.0.0,<3.0.0 joblib>=1.0.0'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    command: airflow scheduler
    restart: always

  flight-dashboard:
    image: python:3.9-slim
    depends_on:
      - postgres
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
    volumes:
      - ./dashboard:/app
      - ./data:/opt/airflow/data
    ports:
      - "5001:5000"
    working_dir: /app
    command: >
      bash -c "
      pip install flask pandas &&
      python app.py"
    restart: always

  realtime-dashboard:
    image: python:3.9-slim
    depends_on:
      - postgres
    environment:
      FLASK_APP: realtime_app.py
      FLASK_ENV: development
    volumes:
      - ./dashboard:/app
      - ./data:/opt/airflow/data
    ports:
      - "5002:5002"
    working_dir: /app
    command: >
      bash -c "
      pip install flask pandas sqlalchemy psycopg2-binary plotly &&
      python realtime_app.py"
    restart: always

volumes:
  postgres_data: 